/*
 * Rika Firenet - OpenAPI 3.0
 *
 * This is an OpenAPI descriptor for the Rika Firenet API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StoveStatus {
    /// Stove identifier
    #[serde(rename = "stoveID")]
    pub stove_id: String,
    /// Stove name
    #[serde(rename = "name")]
    pub name: String,
    /// Manufacturer
    #[serde(rename = "oem")]
    pub oem: String,
    /// Model name
    #[serde(rename = "stoveType")]
    pub stove_type: String,
    #[serde(rename = "lastConfirmedRevision")]
    pub last_confirmed_revision: i32,
    #[serde(rename = "lastSeenMinutes")]
    pub last_seen_minutes: i32,
    #[serde(rename = "controls")]
    pub controls: Box<crate::models::StoveControls>,
    #[serde(rename = "sensors")]
    pub sensors: Box<crate::models::StoveSensors>,
    #[serde(rename = "stoveFeatures")]
    pub stove_features: Box<crate::models::StoveFeatures>,
}

impl StoveStatus {
    pub fn new(stove_id: String, name: String, oem: String, stove_type: String, last_confirmed_revision: i32, last_seen_minutes: i32, controls: crate::models::StoveControls, sensors: crate::models::StoveSensors, stove_features: crate::models::StoveFeatures) -> StoveStatus {
        StoveStatus {
            stove_id,
            name,
            oem,
            stove_type,
            last_confirmed_revision,
            last_seen_minutes,
            controls: Box::new(controls),
            sensors: Box::new(sensors),
            stove_features: Box::new(stove_features),
        }
    }
}


