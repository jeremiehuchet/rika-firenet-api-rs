/*
 * Rika Firenet - OpenAPI 3.0
 *
 * Rika Firenet API operations
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct StoveSensors {
    #[serde(rename = "inputBakeTemperature")]
    pub input_bake_temperature: String,
    #[serde(rename = "inputBoardTemperature")]
    pub input_board_temperature: String,
    #[serde(rename = "inputBurnBackFlapSwitch")]
    pub input_burn_back_flap_switch: bool,
    #[serde(rename = "inputCover")]
    pub input_cover: bool,
    #[serde(rename = "inputCurrentStage")]
    pub input_current_stage: i32,
    #[serde(rename = "inputCurrentStagePID")]
    pub input_current_stage_pid: i32,
    #[serde(rename = "inputDoor")]
    pub input_door: bool,
    #[serde(rename = "inputExternalRequest")]
    pub input_external_request: bool,
    #[serde(rename = "inputFlameTemperature")]
    pub input_flame_temperature: i32,
    #[serde(rename = "inputFlueGasFlapSwitch")]
    pub input_flue_gas_flap_switch: bool,
    #[serde(rename = "inputGridContact")]
    pub input_grid_contact: bool,
    #[serde(rename = "inputPressureSensor")]
    pub input_pressure_sensor: i32,
    #[serde(rename = "inputPressureSwitch")]
    pub input_pressure_switch: bool,
    #[serde(rename = "inputRoomTemperature")]
    pub input_room_temperature: String,
    #[serde(rename = "inputTargetStagePID")]
    pub input_target_stage_pid: i32,
    #[serde(rename = "inputUpperTemperatureLimiter")]
    pub input_upper_temperature_limiter: bool,
    #[serde(rename = "outputAirFlaps")]
    pub output_air_flaps: i32,
    #[serde(rename = "outputAirFlapsTargetPosition")]
    pub output_air_flaps_target_position: i32,
    #[serde(rename = "outputBurnBackFlapMagnet")]
    pub output_burn_back_flap_magnet: bool,
    #[serde(rename = "outputDischargeCurrent")]
    pub output_discharge_current: i32,
    #[serde(rename = "outputDischargeMotor")]
    pub output_discharge_motor: i32,
    #[serde(rename = "outputGridMotor")]
    pub output_grid_motor: bool,
    #[serde(rename = "outputIDFan")]
    pub output_id_fan: i32,
    #[serde(rename = "outputIDFanTarget")]
    pub output_id_fan_target: i32,
    #[serde(rename = "outputIgnition")]
    pub output_ignition: bool,
    #[serde(rename = "outputInsertionCurrent")]
    pub output_insertion_current: i32,
    #[serde(rename = "outputInsertionMotor")]
    pub output_insertion_motor: i32,
    #[serde(rename = "parameterCleanIntervalBig")]
    pub parameter_clean_interval_big: i32,
    #[serde(rename = "parameterDebug0")]
    pub parameter_debug0: i32,
    #[serde(rename = "parameterDebug1")]
    pub parameter_debug1: i32,
    #[serde(rename = "parameterDebug2")]
    pub parameter_debug2: i32,
    #[serde(rename = "parameterDebug3")]
    pub parameter_debug3: i32,
    #[serde(rename = "parameterDebug4")]
    pub parameter_debug4: i32,
    #[serde(rename = "parameterEcoModePossible")]
    pub parameter_eco_mode_possible: bool,
    #[serde(rename = "parameterErrorCount0")]
    pub parameter_error_count0: i32,
    #[serde(rename = "parameterErrorCount1")]
    pub parameter_error_count1: i32,
    #[serde(rename = "parameterErrorCount10")]
    pub parameter_error_count10: i32,
    #[serde(rename = "parameterErrorCount11")]
    pub parameter_error_count11: i32,
    #[serde(rename = "parameterErrorCount12")]
    pub parameter_error_count12: i32,
    #[serde(rename = "parameterErrorCount13")]
    pub parameter_error_count13: i32,
    #[serde(rename = "parameterErrorCount14")]
    pub parameter_error_count14: i32,
    #[serde(rename = "parameterErrorCount15")]
    pub parameter_error_count15: i32,
    #[serde(rename = "parameterErrorCount16")]
    pub parameter_error_count16: i32,
    #[serde(rename = "parameterErrorCount17")]
    pub parameter_error_count17: i32,
    #[serde(rename = "parameterErrorCount18")]
    pub parameter_error_count18: i32,
    #[serde(rename = "parameterErrorCount19")]
    pub parameter_error_count19: i32,
    #[serde(rename = "parameterErrorCount2")]
    pub parameter_error_count2: i32,
    #[serde(rename = "parameterErrorCount3")]
    pub parameter_error_count3: i32,
    #[serde(rename = "parameterErrorCount4")]
    pub parameter_error_count4: i32,
    #[serde(rename = "parameterErrorCount5")]
    pub parameter_error_count5: i32,
    #[serde(rename = "parameterErrorCount6")]
    pub parameter_error_count6: i32,
    #[serde(rename = "parameterErrorCount7")]
    pub parameter_error_count7: i32,
    #[serde(rename = "parameterErrorCount8")]
    pub parameter_error_count8: i32,
    #[serde(rename = "parameterErrorCount9")]
    pub parameter_error_count9: i32,
    #[serde(rename = "parameterFabricationNumber")]
    pub parameter_fabrication_number: i32,
    #[serde(rename = "parameterFeedRateService")]
    pub parameter_feed_rate_service: i32,
    #[serde(rename = "parameterFeedRateTotal")]
    pub parameter_feed_rate_total: i32,
    #[serde(rename = "parameterFlameSensorOffset")]
    pub parameter_flame_sensor_offset: i32,
    #[serde(rename = "parameterIDFanTuning")]
    pub parameter_id_fan_tuning: i32,
    #[serde(rename = "parameterIgnitionCount")]
    pub parameter_ignition_count: i32,
    #[serde(rename = "parameterKgTillCleaning")]
    pub parameter_kg_till_cleaning: i32,
    #[serde(rename = "parameterLanguageNumber")]
    pub parameter_language_number: i32,
    #[serde(rename = "parameterOnOffCycleCount")]
    pub parameter_on_off_cycle_count: i32,
    #[serde(rename = "parameterPressureSensorOffset")]
    pub parameter_pressure_sensor_offset: i32,
    #[serde(rename = "parameterRuntimeLogs")]
    pub parameter_runtime_logs: i32,
    #[serde(rename = "parameterRuntimePellets")]
    pub parameter_runtime_pellets: i32,
    #[serde(rename = "parameterServiceCountdownKg")]
    pub parameter_service_countdown_kg: i32,
    #[serde(rename = "parameterServiceCountdownTime")]
    pub parameter_service_countdown_time: i32,
    #[serde(rename = "parameterSpiralMotorsTuning")]
    pub parameter_spiral_motors_tuning: i32,
    #[serde(rename = "parameterStoveTypeNumber")]
    pub parameter_stove_type_number: i32,
    #[serde(rename = "parameterVersionMainBoard")]
    pub parameter_version_main_board: i32,
    #[serde(rename = "parameterVersionMainBoardBootLoader")]
    pub parameter_version_main_board_boot_loader: i32,
    #[serde(rename = "parameterVersionMainBoardSub")]
    pub parameter_version_main_board_sub: i32,
    #[serde(rename = "parameterVersionTFT")]
    pub parameter_version_tft: i32,
    #[serde(rename = "parameterVersionTFTBootLoader")]
    pub parameter_version_tft_boot_loader: i32,
    #[serde(rename = "parameterVersionTFTSub")]
    pub parameter_version_tft_sub: i32,
    #[serde(rename = "parameterVersionWiFi")]
    pub parameter_version_wi_fi: i32,
    #[serde(rename = "parameterVersionWiFiBootLoader")]
    pub parameter_version_wi_fi_boot_loader: i32,
    #[serde(rename = "parameterVersionWiFiSub")]
    pub parameter_version_wi_fi_sub: i32,
    #[serde(rename = "statusError")]
    pub status_error: i32,
    #[serde(rename = "statusFrostStarted")]
    pub status_frost_started: bool,
    #[serde(rename = "statusHeatingTimesNotProgrammed")]
    pub status_heating_times_not_programmed: bool,
    #[serde(rename = "statusMainState")]
    pub status_main_state: i32,
    #[serde(rename = "statusService")]
    pub status_service: i32,
    #[serde(rename = "statusSubError")]
    pub status_sub_error: i32,
    #[serde(rename = "statusSubState")]
    pub status_sub_state: i32,
    #[serde(rename = "statusWarning")]
    pub status_warning: i32,
    #[serde(rename = "statusWifiStrength")]
    pub status_wifi_strength: i32,
}

impl StoveSensors {
    pub fn new(
        input_bake_temperature: String,
        input_board_temperature: String,
        input_burn_back_flap_switch: bool,
        input_cover: bool,
        input_current_stage: i32,
        input_current_stage_pid: i32,
        input_door: bool,
        input_external_request: bool,
        input_flame_temperature: i32,
        input_flue_gas_flap_switch: bool,
        input_grid_contact: bool,
        input_pressure_sensor: i32,
        input_pressure_switch: bool,
        input_room_temperature: String,
        input_target_stage_pid: i32,
        input_upper_temperature_limiter: bool,
        output_air_flaps: i32,
        output_air_flaps_target_position: i32,
        output_burn_back_flap_magnet: bool,
        output_discharge_current: i32,
        output_discharge_motor: i32,
        output_grid_motor: bool,
        output_id_fan: i32,
        output_id_fan_target: i32,
        output_ignition: bool,
        output_insertion_current: i32,
        output_insertion_motor: i32,
        parameter_clean_interval_big: i32,
        parameter_debug0: i32,
        parameter_debug1: i32,
        parameter_debug2: i32,
        parameter_debug3: i32,
        parameter_debug4: i32,
        parameter_eco_mode_possible: bool,
        parameter_error_count0: i32,
        parameter_error_count1: i32,
        parameter_error_count10: i32,
        parameter_error_count11: i32,
        parameter_error_count12: i32,
        parameter_error_count13: i32,
        parameter_error_count14: i32,
        parameter_error_count15: i32,
        parameter_error_count16: i32,
        parameter_error_count17: i32,
        parameter_error_count18: i32,
        parameter_error_count19: i32,
        parameter_error_count2: i32,
        parameter_error_count3: i32,
        parameter_error_count4: i32,
        parameter_error_count5: i32,
        parameter_error_count6: i32,
        parameter_error_count7: i32,
        parameter_error_count8: i32,
        parameter_error_count9: i32,
        parameter_fabrication_number: i32,
        parameter_feed_rate_service: i32,
        parameter_feed_rate_total: i32,
        parameter_flame_sensor_offset: i32,
        parameter_id_fan_tuning: i32,
        parameter_ignition_count: i32,
        parameter_kg_till_cleaning: i32,
        parameter_language_number: i32,
        parameter_on_off_cycle_count: i32,
        parameter_pressure_sensor_offset: i32,
        parameter_runtime_logs: i32,
        parameter_runtime_pellets: i32,
        parameter_service_countdown_kg: i32,
        parameter_service_countdown_time: i32,
        parameter_spiral_motors_tuning: i32,
        parameter_stove_type_number: i32,
        parameter_version_main_board: i32,
        parameter_version_main_board_boot_loader: i32,
        parameter_version_main_board_sub: i32,
        parameter_version_tft: i32,
        parameter_version_tft_boot_loader: i32,
        parameter_version_tft_sub: i32,
        parameter_version_wi_fi: i32,
        parameter_version_wi_fi_boot_loader: i32,
        parameter_version_wi_fi_sub: i32,
        status_error: i32,
        status_frost_started: bool,
        status_heating_times_not_programmed: bool,
        status_main_state: i32,
        status_service: i32,
        status_sub_error: i32,
        status_sub_state: i32,
        status_warning: i32,
        status_wifi_strength: i32,
    ) -> StoveSensors {
        StoveSensors {
            input_bake_temperature,
            input_board_temperature,
            input_burn_back_flap_switch,
            input_cover,
            input_current_stage,
            input_current_stage_pid,
            input_door,
            input_external_request,
            input_flame_temperature,
            input_flue_gas_flap_switch,
            input_grid_contact,
            input_pressure_sensor,
            input_pressure_switch,
            input_room_temperature,
            input_target_stage_pid,
            input_upper_temperature_limiter,
            output_air_flaps,
            output_air_flaps_target_position,
            output_burn_back_flap_magnet,
            output_discharge_current,
            output_discharge_motor,
            output_grid_motor,
            output_id_fan,
            output_id_fan_target,
            output_ignition,
            output_insertion_current,
            output_insertion_motor,
            parameter_clean_interval_big,
            parameter_debug0,
            parameter_debug1,
            parameter_debug2,
            parameter_debug3,
            parameter_debug4,
            parameter_eco_mode_possible,
            parameter_error_count0,
            parameter_error_count1,
            parameter_error_count10,
            parameter_error_count11,
            parameter_error_count12,
            parameter_error_count13,
            parameter_error_count14,
            parameter_error_count15,
            parameter_error_count16,
            parameter_error_count17,
            parameter_error_count18,
            parameter_error_count19,
            parameter_error_count2,
            parameter_error_count3,
            parameter_error_count4,
            parameter_error_count5,
            parameter_error_count6,
            parameter_error_count7,
            parameter_error_count8,
            parameter_error_count9,
            parameter_fabrication_number,
            parameter_feed_rate_service,
            parameter_feed_rate_total,
            parameter_flame_sensor_offset,
            parameter_id_fan_tuning,
            parameter_ignition_count,
            parameter_kg_till_cleaning,
            parameter_language_number,
            parameter_on_off_cycle_count,
            parameter_pressure_sensor_offset,
            parameter_runtime_logs,
            parameter_runtime_pellets,
            parameter_service_countdown_kg,
            parameter_service_countdown_time,
            parameter_spiral_motors_tuning,
            parameter_stove_type_number,
            parameter_version_main_board,
            parameter_version_main_board_boot_loader,
            parameter_version_main_board_sub,
            parameter_version_tft,
            parameter_version_tft_boot_loader,
            parameter_version_tft_sub,
            parameter_version_wi_fi,
            parameter_version_wi_fi_boot_loader,
            parameter_version_wi_fi_sub,
            status_error,
            status_frost_started,
            status_heating_times_not_programmed,
            status_main_state,
            status_service,
            status_sub_error,
            status_sub_state,
            status_warning,
            status_wifi_strength,
        }
    }
}
