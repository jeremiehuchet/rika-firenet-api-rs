/*
 * Rika Firenet - OpenAPI 3.0
 *
 * Rika Firenet API operations
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StoveControls {
    #[serde(rename = "RoomPowerRequest", skip_serializing_if = "Option::is_none")]
    pub room_power_request: Option<i32>,
    #[serde(rename = "bakeTemperature", skip_serializing_if = "Option::is_none")]
    pub bake_temperature: Option<String>,
    #[serde(
        rename = "convectionFan1Active",
        skip_serializing_if = "Option::is_none"
    )]
    pub convection_fan1_active: Option<bool>,
    #[serde(rename = "convectionFan1Area", skip_serializing_if = "Option::is_none")]
    pub convection_fan1_area: Option<i32>,
    #[serde(
        rename = "convectionFan1Level",
        skip_serializing_if = "Option::is_none"
    )]
    pub convection_fan1_level: Option<i32>,
    #[serde(
        rename = "convectionFan2Active",
        skip_serializing_if = "Option::is_none"
    )]
    pub convection_fan2_active: Option<bool>,
    #[serde(rename = "convectionFan2Area", skip_serializing_if = "Option::is_none")]
    pub convection_fan2_area: Option<i32>,
    #[serde(
        rename = "convectionFan2Level",
        skip_serializing_if = "Option::is_none"
    )]
    pub convection_fan2_level: Option<i32>,
    #[serde(rename = "debug0", skip_serializing_if = "Option::is_none")]
    pub debug0: Option<i32>,
    #[serde(rename = "debug1", skip_serializing_if = "Option::is_none")]
    pub debug1: Option<i32>,
    #[serde(rename = "debug2", skip_serializing_if = "Option::is_none")]
    pub debug2: Option<i32>,
    #[serde(rename = "debug3", skip_serializing_if = "Option::is_none")]
    pub debug3: Option<i32>,
    #[serde(rename = "debug4", skip_serializing_if = "Option::is_none")]
    pub debug4: Option<i32>,
    #[serde(rename = "ecoMode", skip_serializing_if = "Option::is_none")]
    pub eco_mode: Option<bool>,
    #[serde(
        rename = "frostProtectionActive",
        skip_serializing_if = "Option::is_none"
    )]
    pub frost_protection_active: Option<bool>,
    #[serde(
        rename = "frostProtectionTemperature",
        skip_serializing_if = "Option::is_none"
    )]
    pub frost_protection_temperature: Option<String>,
    #[serde(rename = "heatingPower", skip_serializing_if = "Option::is_none")]
    pub heating_power: Option<i32>,
    #[serde(rename = "heatingTimeFri1", skip_serializing_if = "Option::is_none")]
    pub heating_time_fri1: Option<String>,
    #[serde(rename = "heatingTimeFri2", skip_serializing_if = "Option::is_none")]
    pub heating_time_fri2: Option<String>,
    #[serde(rename = "heatingTimeMon1", skip_serializing_if = "Option::is_none")]
    pub heating_time_mon1: Option<String>,
    #[serde(rename = "heatingTimeMon2", skip_serializing_if = "Option::is_none")]
    pub heating_time_mon2: Option<String>,
    #[serde(rename = "heatingTimeSat1", skip_serializing_if = "Option::is_none")]
    pub heating_time_sat1: Option<String>,
    #[serde(rename = "heatingTimeSat2", skip_serializing_if = "Option::is_none")]
    pub heating_time_sat2: Option<String>,
    #[serde(rename = "heatingTimeSun1", skip_serializing_if = "Option::is_none")]
    pub heating_time_sun1: Option<String>,
    #[serde(rename = "heatingTimeSun2", skip_serializing_if = "Option::is_none")]
    pub heating_time_sun2: Option<String>,
    #[serde(rename = "heatingTimeThu1", skip_serializing_if = "Option::is_none")]
    pub heating_time_thu1: Option<String>,
    #[serde(rename = "heatingTimeThu2", skip_serializing_if = "Option::is_none")]
    pub heating_time_thu2: Option<String>,
    #[serde(rename = "heatingTimeTue1", skip_serializing_if = "Option::is_none")]
    pub heating_time_tue1: Option<String>,
    #[serde(rename = "heatingTimeTue2", skip_serializing_if = "Option::is_none")]
    pub heating_time_tue2: Option<String>,
    #[serde(rename = "heatingTimeWed1", skip_serializing_if = "Option::is_none")]
    pub heating_time_wed1: Option<String>,
    #[serde(rename = "heatingTimeWed2", skip_serializing_if = "Option::is_none")]
    pub heating_time_wed2: Option<String>,
    #[serde(
        rename = "heatingTimesActiveForComfort",
        skip_serializing_if = "Option::is_none"
    )]
    pub heating_times_active_for_comfort: Option<bool>,
    #[serde(rename = "onOff", skip_serializing_if = "Option::is_none")]
    pub on_off: Option<bool>,
    #[serde(rename = "operatingMode", skip_serializing_if = "Option::is_none")]
    pub operating_mode: Option<i32>,
    #[serde(rename = "revision", skip_serializing_if = "Option::is_none")]
    pub revision: Option<i32>,
    #[serde(rename = "setBackTemperature", skip_serializing_if = "Option::is_none")]
    pub set_back_temperature: Option<String>,
    #[serde(rename = "targetTemperature", skip_serializing_if = "Option::is_none")]
    pub target_temperature: Option<String>,
    #[serde(rename = "temperatureOffset", skip_serializing_if = "Option::is_none")]
    pub temperature_offset: Option<String>,
}

impl StoveControls {
    pub fn new() -> StoveControls {
        StoveControls {
            room_power_request: None,
            bake_temperature: None,
            convection_fan1_active: None,
            convection_fan1_area: None,
            convection_fan1_level: None,
            convection_fan2_active: None,
            convection_fan2_area: None,
            convection_fan2_level: None,
            debug0: None,
            debug1: None,
            debug2: None,
            debug3: None,
            debug4: None,
            eco_mode: None,
            frost_protection_active: None,
            frost_protection_temperature: None,
            heating_power: None,
            heating_time_fri1: None,
            heating_time_fri2: None,
            heating_time_mon1: None,
            heating_time_mon2: None,
            heating_time_sat1: None,
            heating_time_sat2: None,
            heating_time_sun1: None,
            heating_time_sun2: None,
            heating_time_thu1: None,
            heating_time_thu2: None,
            heating_time_tue1: None,
            heating_time_tue2: None,
            heating_time_wed1: None,
            heating_time_wed2: None,
            heating_times_active_for_comfort: None,
            on_off: None,
            operating_mode: None,
            revision: None,
            set_back_temperature: None,
            target_temperature: None,
            temperature_offset: None,
        }
    }
}
